const int PinRes   = A0;                   //  Константа с № аналогового входа к которому подключён резистор
const int PinPWM_L = 10;                   //  Константа с № вывода к которому подключено левое плечо
const int PinPWM_R = 9;                    //  Константа с № вывода к которому подключено правое плечо
      int ValRes   = 0;                    //  Переменная для хранения прочитанного напряжения    (0...1023)
      int ValPWM_L = 0;                    //  Переменная для хранения значения ШИМ левого плеча  (0... 255)
      int ValPWM_R = 0;                    //  Переменная для хранения значения ШИМ правого плеча (0... 255)

void setup(){                              //  Код внутри функции setup выполняется однократно при старте
    pinMode(ValPWM_L, OUTPUT);             //  Конфигурируем вывод, с ШИМ, ValPWM_L как выход
    pinMode(PinPWM_R, OUTPUT);             //  Конфигурируем вывод, с ШИМ, PinPWM_R как выход
}                                          //  Аналоговые входы можно не конфигурировать!

void loop(){                               //  Код внутри функции loop выполняется постоянно
    ValRes = analogRead(PinRes);           //  Считываем напряжение с аналогового входа PinRes
    if(ValRes<512){                        //  Если ручка потенциометра смещена влево, то ...
      ValPWM_L=map(ValRes,0,512,255,0);    //  Преобразуем ValRes (от 0 до 512) к ValPWM_L (от 255 до 0)
      ValPWM_R=0;                          //  Устанавливаем ValPWM_R в значение 255 (максимальный ШИМ)
    }else{                                 //  Если ручка потенциометра смещена вправо, то ...
      ValPWM_R=map(ValRes,512,1023,0,255); //  Преобразуем ValRes (от 512 до 1023) к ValPWM_L (от 0 до 255)
      ValPWM_L=0;                          //  Устанавливаем ValPWM_L в значение 255 (максимальный ШИМ)
    }
    analogWrite(PinPWM_L, ValPWM_L);       //  Устанавливаем ШИМ с коэффициентом ValPWM_L на выходе PinPWM_L
    analogWrite(PinPWM_R, ValPWM_R);       //  Устанавливаем ШИМ с коэффициентом ValPWM_R на выходе PinPWM_R
}
